<div class="center">
    <h5>{{title}}</h5>

    <br>
    <!--TODO Make This page's text, buttons, and text fields look like they're modern and not from the 90s-->
    <h5 class="instructions">Write the English translation to the Spanish Word Given:</h5>
    <div id="app">
        <br>
        ${ questionShown }
        <br>
        <br>
        <div class="container">
            <div class="row">
                <div class="col-sm">
                </div>
                <div class="col-sm">
                    <div class="card" style="width: 18rem;" id="answerCard">
                        <div class="card-body">
                            <input id="answerGiven" v-model="answerGiven">
                        </div>
                    </div>
                </div>
                <div class="col-sm">
                </div>
            </div>
            <br>
            <button class="CheckButton" v-on:click="checkAnswer">Check Answer</button>
            <br>
            <div class="row">
                <div class="col-sm" id="leftCol">
                    <div class="incorrect">
                        Incorrect ðŸ˜ž
                        Correct Answer was: ${ correctAnswer }
                    </div>
                </div>
                <div class="col-sm">
                </div>
                <div class="col-sm" id="rightCol">
                    <div class="correct">
                        Correct! ðŸ˜ƒ
                    </div>
                </div>

            </div>
    </div>

    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script src="https://cdn.jsdelivr.net/npm/animejs@3.1.0/lib/anime.min.js"></script>
<script>

    function newQuestionSet() {
    //TODO Make sure it doesn't give the same question multiple times in a row
    //Gets json from app.js spanishSpanish GET request for asking the user
    //Parse Data Given into seperate variables
    fetch('/spanishSpanish/')
      .then(response => response.json())
      .then(data => {
        let question = data['question'];
        let answer = data['answer'];
        app.questionShown = question;
        app.correctAnswer = answer;
      }).catch(error => {
        console.log("Error in getting Question");
      });
    }

    var spanishLength;

    var app = new Vue({
        delimiters: ['${', '}'],
        el: '#app',
        data: {
            questionShown: 'Question',
            correctAnswer: '',
            answerGiven: 'Your Translation'
        },
        mounted: function () {
            leftCol.style.visibility = 'hidden';
            rightCol.style.visibility = 'hidden';
            newQuestionSet(); //Executes on pageload, gets the first question word (Qword) ready for user
        },
        methods: {
        // TODO: Make it remove the correct or wrong after going to next question
            checkAnswer: function () {
                if (app.correctAnswer.toLowerCase() === app.answerGiven.toLowerCase()) {
                    rightCol.style.visibility = 'visible';
                    async function newQuestionWait() {

                      let promise = new Promise((resolve, reject) => {
                        setTimeout(() => resolve("done!"), 1000)
                      });

                      let result = await promise; // Wait so user can see if they're right or not TODO: make it where someone can always

                       newQuestionSet();
                    }

                    newQuestionWait();

                /*    anime({       TODO: Fix it, it doesn't work when mouse is hovering on it and it looks bad | Make it like an animated checkmark or something
                        targets: '#answerCard',
                        easing: 'linear',
                        opacity: ['1', '0'],
                        complete: function (anim) {
                            console.log("completed");
                            anime({
                                targets: '#answerCard',
                                easing: 'linear',
                                opacity: ['0', '1'],
                                complete: function (anim) {
                                    newQuestionSet();
                                    leftCol.style.visibility = 'hidden';
                                    rightCol.style.visibility = 'hidden';
                                }
                            });
                        }
                    }); */
                } else {
                    leftCol.style.visibility = 'visible';
                 /*   anime({  TODO: Same as I said above
                        targets: '#answerCard',
                        easing: 'linear',
                        opacity: ['1', '0'],
                        complete: function (anim) {
                            console.log("completed");
                            anime({
                                targets: '#answerCard',
                                easing: 'linear',
                                opacity: ['0', '1'],
                                complete: function (anim) {
                                    newQuestionSet();
                                    leftCol.style.visibility = 'hidden';
                                    rightCol.style.visibility = 'hidden';
                                }
                            });
                        }
                    }); */
                }
            }
        }
    })
</script>